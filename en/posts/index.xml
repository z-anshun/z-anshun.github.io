<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Noodles2hg的博客</title>
    <link>https://z-anshun.github.io/en/posts/</link>
    <description>Recent content in Posts on Noodles2hg的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 29 Jun 2022 21:13:36 +0000</lastBuildDate>
    <atom:link href="https://z-anshun.github.io/en/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>大数据开发试题</title>
      <link>https://z-anshun.github.io/en/posts/blog/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E8%AF%95%E9%A2%98/</link>
      <pubDate>Wed, 29 Jun 2022 21:13:36 +0000</pubDate>
      <guid>https://z-anshun.github.io/en/posts/blog/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E8%AF%95%E9%A2%98/</guid>
      <description>基础概念 大数据带来思维方式的三个转变是 相关而非因果 全样而非抽样 效率而非精准 精准而非全面 大数据发展的三个阶段是 低谷期 萌芽期 成熟期 大规模应用期 每</description>
    </item>
    <item>
      <title>SQL注入</title>
      <link>https://z-anshun.github.io/en/posts/blog/sql%E6%B3%A8%E5%85%A5/</link>
      <pubDate>Sun, 20 Feb 2022 14:36:41 +0000</pubDate>
      <guid>https://z-anshun.github.io/en/posts/blog/sql%E6%B3%A8%E5%85%A5/</guid>
      <description>什么是SQL注入 SQL注入攻击（SQL Injection），简称注入攻击，是Web开发中最常见的一种安全漏洞 有什么危害？ 可以用它来从数据库获</description>
    </item>
    <item>
      <title>部分排序</title>
      <link>https://z-anshun.github.io/en/posts/blog/%E9%83%A8%E5%88%86%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Sun, 13 Feb 2022 20:01:55 +0000</pubDate>
      <guid>https://z-anshun.github.io/en/posts/blog/%E9%83%A8%E5%88%86%E6%8E%92%E5%BA%8F/</guid>
      <description>题目： 面试题 16.16. 部分排序 给定一个整数数组，编写一个函数，找出索引m和n，只要将索引区间[m,n]的元素排好序，整个数组就是有序的。注意：n-m</description>
    </item>
    <item>
      <title>拥塞控制协议</title>
      <link>https://z-anshun.github.io/en/posts/blog/%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6%E5%8D%8F%E8%AE%AE/</link>
      <pubDate>Mon, 07 Feb 2022 20:43:46 +0000</pubDate>
      <guid>https://z-anshun.github.io/en/posts/blog/%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6%E5%8D%8F%E8%AE%AE/</guid>
      <description>流量控制 什么是流量控制？目的？ 发送者发送的数据过快，接受者来不及接受，那么就会有分组丢失的情况。为了避免这种情况，我们就需要控制发送者的速度</description>
    </item>
    <item>
      <title>二叉树转双向链表</title>
      <link>https://z-anshun.github.io/en/posts/blog/%E4%BA%8C%E5%8F%89%E6%A0%91%E8%BD%AC%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8/</link>
      <pubDate>Sun, 06 Feb 2022 18:52:02 +0000</pubDate>
      <guid>https://z-anshun.github.io/en/posts/blog/%E4%BA%8C%E5%8F%89%E6%A0%91%E8%BD%AC%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8/</guid>
      <description>剑指 Offer 36. 二叉搜索树与双向链表 输入一棵二叉搜索树，将该二叉搜索树转换成一个排序的循环双向链表。要求不能创建任何新的节点，只能调整树中节点指针的</description>
    </item>
    <item>
      <title>乘积小于K的子数组</title>
      <link>https://z-anshun.github.io/en/posts/blog/%E4%B9%98%E7%A7%AF%E5%B0%8F%E4%BA%8Ek%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/</link>
      <pubDate>Wed, 02 Feb 2022 17:56:45 +0000</pubDate>
      <guid>https://z-anshun.github.io/en/posts/blog/%E4%B9%98%E7%A7%AF%E5%B0%8F%E4%BA%8Ek%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/</guid>
      <description>剑指 Offer II 009. 乘积小于 K 的子数组 给定一个正整数数组 nums和整数 k ，请找出该数组内乘积小于 k 的连续的子数组的个数。 示例 1: 1 2 3 4 输入: nums = [10,5,2,6], k =</description>
    </item>
    <item>
      <title>缓存穿透、雪崩、击穿</title>
      <link>https://z-anshun.github.io/en/posts/blog/%E7%BC%93%E5%AD%98%E7%A9%BF%E9%80%8F%E9%9B%AA%E5%B4%A9%E5%87%BB%E7%A9%BF/</link>
      <pubDate>Tue, 01 Feb 2022 20:45:37 +0000</pubDate>
      <guid>https://z-anshun.github.io/en/posts/blog/%E7%BC%93%E5%AD%98%E7%A9%BF%E9%80%8F%E9%9B%AA%E5%B4%A9%E5%87%BB%E7%A9%BF/</guid>
      <description>缓存穿透 指查询一个不存在的数据，那么肯定缓存里没有，就会查找DB，如果DB也没有，那么就不会写入缓存，这就是会导致每次对该数据查询的时候都要</description>
    </item>
    <item>
      <title>最长的美好子字符串</title>
      <link>https://z-anshun.github.io/en/posts/blog/%E6%9C%80%E9%95%BF%E7%9A%84%E7%BE%8E%E5%A5%BD%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Tue, 01 Feb 2022 20:00:01 +0000</pubDate>
      <guid>https://z-anshun.github.io/en/posts/blog/%E6%9C%80%E9%95%BF%E7%9A%84%E7%BE%8E%E5%A5%BD%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>最长美好子字符串 1763. 最长的美好子字符串 当一个字符串 s 包含的每一种字母的大写和小写形式 同时 出现在 s 中，就称这个字符串 s 是 美好 字符串。比方说，&amp;q</description>
    </item>
    <item>
      <title>跳跃游戏</title>
      <link>https://z-anshun.github.io/en/posts/blog/%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/</link>
      <pubDate>Sat, 22 Jan 2022 22:53:29 +0000</pubDate>
      <guid>https://z-anshun.github.io/en/posts/blog/%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/</guid>
      <description>题目： 1345. 跳跃游戏 IV 给你一个整数数组 arr ，你一开始在数组的第一个元素处（下标为 0）。 每一步，你可以从下标 i 跳到下标： i + 1 满足：i + 1 &amp;lt; arr.length i - 1</description>
    </item>
    <item>
      <title>最长重复子数组</title>
      <link>https://z-anshun.github.io/en/posts/blog/%E6%9C%80%E9%95%BF%E9%87%8D%E5%A4%8D%E5%AD%90%E6%95%B0%E7%BB%84/</link>
      <pubDate>Sat, 22 Jan 2022 22:29:51 +0000</pubDate>
      <guid>https://z-anshun.github.io/en/posts/blog/%E6%9C%80%E9%95%BF%E9%87%8D%E5%A4%8D%E5%AD%90%E6%95%B0%E7%BB%84/</guid>
      <description>题目：718. 最长重复子数组 给两个整数数组 A 和 B ，返回两个数组中公共的、长度最长的子数组的长度。 示例： 1 2 3 4 5 6 输入： A: [1,2,3,2,1] B: [3,2,1,4,7] 输出：3 解释</description>
    </item>
    <item>
      <title>最大公约数</title>
      <link>https://z-anshun.github.io/en/posts/blog/gcb/</link>
      <pubDate>Mon, 13 Dec 2021 15:48:17 +0000</pubDate>
      <guid>https://z-anshun.github.io/en/posts/blog/gcb/</guid>
      <description>最大公约数即为 Greatest Common Divisor，常缩写为 gcd 欧几里得算法 $$ 若x=cn,y=cm，c为最大公约数\ 那么当x&amp;gt;y时，即n&amp;gt;m时\ 令x</description>
    </item>
    <item>
      <title>和至少为 K 的最短子数组</title>
      <link>https://z-anshun.github.io/en/posts/blog/%E5%92%8C%E8%87%B3%E5%B0%91%E4%B8%BA-k-%E7%9A%84%E6%9C%80%E7%9F%AD%E5%AD%90%E6%95%B0%E7%BB%84/</link>
      <pubDate>Sun, 12 Dec 2021 15:45:32 +0000</pubDate>
      <guid>https://z-anshun.github.io/en/posts/blog/%E5%92%8C%E8%87%B3%E5%B0%91%E4%B8%BA-k-%E7%9A%84%E6%9C%80%E7%9F%AD%E5%AD%90%E6%95%B0%E7%BB%84/</guid>
      <description>题目：给你一个整数数组 nums 和一个整数 k ，找出 nums 中和至少为 k 的 最短非空子数组 ，并返回该子数组的长度。如果不存在这样的 子数组 ，返回 -1 。 子数组 是数组</description>
    </item>
    <item>
      <title>树状数组</title>
      <link>https://z-anshun.github.io/en/posts/blog/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/</link>
      <pubDate>Thu, 21 Oct 2021 22:24:17 +0000</pubDate>
      <guid>https://z-anshun.github.io/en/posts/blog/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/</guid>
      <description>简介 线状数组类是线段树，但是却又不同，其对于节点的更改，和查找集合是十分方便的 原理 假设，我们当前的数组为a，构成的线状数组为c 那么 即： c[1]=a[1] c[2]=a[1]+a[2] c[3]=a[3]</description>
    </item>
    <item>
      <title>最多牌组数</title>
      <link>https://z-anshun.github.io/en/posts/blog/%E6%9C%80%E5%A4%9A%E7%89%8C%E7%BB%84%E6%95%B0/</link>
      <pubDate>Sat, 09 Oct 2021 18:13:45 +0000</pubDate>
      <guid>https://z-anshun.github.io/en/posts/blog/%E6%9C%80%E5%A4%9A%E7%89%8C%E7%BB%84%E6%95%B0/</guid>
      <description>题目：麻将的游戏规则中，共有两种方式凑成「一组牌」： 顺子：三张牌面数字连续的麻将，例如 [4,5,6] 刻子：三张牌面数字相同的麻将，例如 [10,10,10] 给定若干数字作为</description>
    </item>
    <item>
      <title>最低加油次数</title>
      <link>https://z-anshun.github.io/en/posts/blog/%E6%9C%80%E4%BD%8E%E5%8A%A0%E6%B2%B9%E6%AC%A1%E6%95%B0/</link>
      <pubDate>Sat, 09 Oct 2021 18:12:46 +0000</pubDate>
      <guid>https://z-anshun.github.io/en/posts/blog/%E6%9C%80%E4%BD%8E%E5%8A%A0%E6%B2%B9%E6%AC%A1%E6%95%B0/</guid>
      <description>题目：汽车从起点出发驶向目的地，该目的地位于出发位置东面 target 英里处。 沿途有加油站，每个 station[i] 代表一个加油站，它位于出发位置东面 station[i][0] 英里处，并且有 station[i][1] 升</description>
    </item>
    <item>
      <title>劲爆金曲</title>
      <link>https://z-anshun.github.io/en/posts/blog/%E5%8A%B2%E7%88%86%E9%87%91%E6%9B%B2/</link>
      <pubDate>Fri, 01 Oct 2021 18:21:43 +0000</pubDate>
      <guid>https://z-anshun.github.io/en/posts/blog/%E5%8A%B2%E7%88%86%E9%87%91%E6%9B%B2/</guid>
      <description>剩下n首歌，t秒时间，问最多能唱几首的前提下，最长时间 输出最多歌数和最长时间 思路： 典型的动归问题，假设我们现在要唱j秒，然后当我们新加入一首</description>
    </item>
    <item>
      <title>并查集</title>
      <link>https://z-anshun.github.io/en/posts/blog/%E5%B9%B6%E6%9F%A5%E9%9B%86/</link>
      <pubDate>Thu, 30 Sep 2021 23:08:29 +0000</pubDate>
      <guid>https://z-anshun.github.io/en/posts/blog/%E5%B9%B6%E6%9F%A5%E9%9B%86/</guid>
      <description>对于一组数据，当要求我们检查某两个数据是否在同一集合内时，就需要并查集去实现了 如：&amp;lt;a,b&amp;gt;,&amp;lt;b,c&amp;gt;，那么很明显</description>
    </item>
    <item>
      <title>Manacher</title>
      <link>https://z-anshun.github.io/en/posts/blog/manacher/</link>
      <pubDate>Mon, 27 Sep 2021 22:56:33 +0000</pubDate>
      <guid>https://z-anshun.github.io/en/posts/blog/manacher/</guid>
      <description>题目：给定一段字符串，求该其最长的回文子串 主要思路： 我们创建一个将目标字符穿进行扩充，然后使用#进行填充，并在前后分别添加^和$方便后续操作</description>
    </item>
    <item>
      <title>XSS攻击和CSRF攻击</title>
      <link>https://z-anshun.github.io/en/posts/blog/xss/</link>
      <pubDate>Sun, 25 Oct 2020 12:40:21 +0000</pubDate>
      <guid>https://z-anshun.github.io/en/posts/blog/xss/</guid>
      <description>XSS攻击 “XSS是跨站脚本攻击(Cross Site Scripting)，为不和层叠样式表(Cascading Style Sheets, CSS)的缩写混淆，故将跨站脚本</description>
    </item>
    <item>
      <title>初步了解区块链与微服务</title>
      <link>https://z-anshun.github.io/en/posts/blog/struct/</link>
      <pubDate>Mon, 19 Oct 2020 21:53:49 +0000</pubDate>
      <guid>https://z-anshun.github.io/en/posts/blog/struct/</guid>
      <description>因为对于个人而言，我经常搞混区块链和分布式，所以便狠下决心写了这篇文章 区块链 概念：从科技层面来看，区块链涉及数学、密码学、互联网和计算机编程</description>
    </item>
    <item>
      <title>浅谈进程与协程、异步与同步、并发与并行</title>
      <link>https://z-anshun.github.io/en/posts/blog/infomal/</link>
      <pubDate>Wed, 14 Oct 2020 21:35:35 +0000</pubDate>
      <guid>https://z-anshun.github.io/en/posts/blog/infomal/</guid>
      <description>今天偶然看到异步和同步的文章，联想到了进程，线程这些。下面，我来浅谈一下进程、线程、异步和同步 进程和线程 进程 一个程序的执行过程，是一个Win</description>
    </item>
    <item>
      <title>CA证书</title>
      <link>https://z-anshun.github.io/en/posts/blog/ca%E8%AF%81%E4%B9%A6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://z-anshun.github.io/en/posts/blog/ca%E8%AF%81%E4%B9%A6/</guid>
      <description>认证中心CA Certificate Authority，证书认证中心 流程： 服务端S会向第三方CA提交公钥（记住不是私钥，私钥自己留着）、组织信息、个人信息（域名）</description>
    </item>
    <item>
      <title>Hello World</title>
      <link>https://z-anshun.github.io/en/posts/blog/hello-world/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://z-anshun.github.io/en/posts/blog/hello-world/</guid>
      <description>Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.
Quick Start Create a new post 1 $ hexo new &amp;#34;My New Post&amp;#34; More info: Writing
Run server 1 $ hexo server More info: Server
Generate static files 1 $ hexo generate More info: Generating</description>
    </item>
  </channel>
</rss>
